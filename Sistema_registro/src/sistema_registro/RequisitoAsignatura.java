/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema_registro;

import codigo.Conexion_consulta;
import static java.awt.Frame.ICONIFIED;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sistema_registro.SQL.ConectorSQL;

/**
 *
 * @author Genesis & Willliam P 
 */
public class RequisitoAsignatura extends javax.swing.JFrame {
     String titulos[] = {"Id Requisitos", "Asignatura Requisito", "Id Carrera"};
    DefaultTableModel modelo = new DefaultTableModel();
    Connection con = null;
    Statement stmt = null;
    String var, var2;


    /**
     * Creates new form RequisitoAsignatura
     */
    public RequisitoAsignatura() throws SQLException {
        initComponents();
        ArrayList<String> lista = new ArrayList<String>();
             lista = new Conexion_consulta().llenar_combo2();
            for(int i = 0; i<lista.size();i++){
                cbo_idCarrera.addItem(lista.get(i));
            }
           
        this.con = ConectorSQL.obtenerConexion();
        actualizarDatos(); 
        this.setTitle("Asignatura Requisito");
         this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/Titulo.png")).getImage());
         
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_guardar = new javax.swing.JButton();
        btn_actualizar1 = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        lbl_idCarrera = new javax.swing.JLabel();
        lbl_idReqAs = new javax.swing.JLabel();
        txt_NombreReqAsig = new javax.swing.JTextField();
        txt_idReqAsig = new javax.swing.JTextField();
        lbl_NombreReqAs = new javax.swing.JLabel();
        cbo_idCarrera = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_ReqAsignatura = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lbl_titulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(215, 236, 233));
        jPanel1.setLayout(null);

        btn_guardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_guardar);
        btn_guardar.setBounds(30, 80, 159, 41);

        btn_actualizar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_actualizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Actualizar.png"))); // NOI18N
        btn_actualizar1.setText("Actualizar");
        btn_actualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizar1ActionPerformed(evt);
            }
        });
        jPanel1.add(btn_actualizar1);
        btn_actualizar1.setBounds(30, 130, 159, 41);

        btn_buscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Consulta.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_buscarMouseClicked(evt);
            }
        });
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_buscar);
        btn_buscar.setBounds(30, 180, 159, 41);

        btn_eliminar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Eliminar.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_eliminar);
        btn_eliminar.setBounds(30, 230, 159, 41);

        lbl_idCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_idCarrera.setText("Id Carrera:");
        jPanel1.add(lbl_idCarrera);
        lbl_idCarrera.setBounds(420, 160, 190, 20);

        lbl_idReqAs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_idReqAs.setText("Id Requisito Asignatura:");
        jPanel1.add(lbl_idReqAs);
        lbl_idReqAs.setBounds(310, 70, 200, 22);

        txt_NombreReqAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_NombreReqAsig);
        txt_NombreReqAsig.setBounds(540, 120, 210, 28);

        txt_idReqAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(txt_idReqAsig);
        txt_idReqAsig.setBounds(540, 70, 210, 28);

        lbl_NombreReqAs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_NombreReqAs.setText(" Requisito Asignatura:");
        jPanel1.add(lbl_NombreReqAs);
        lbl_NombreReqAs.setBounds(330, 120, 190, 20);

        cbo_idCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una carrera:" }));
        jPanel1.add(cbo_idCarrera);
        cbo_idCarrera.setBounds(540, 160, 210, 30);

        Tabla_ReqAsignatura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Requisito", "Asignatura requisito", "Id Carrera"
            }
        ));
        Tabla_ReqAsignatura.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_ReqAsignaturaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_ReqAsignatura);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(60, 310, 736, 110);

        jPanel2.setBackground(new java.awt.Color(232, 251, 249));

        lbl_titulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_titulo.setText("Requisito Asignatura");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addComponent(lbl_titulo)
                .addContainerGap(338, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_titulo)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/imagen 3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/menu.png"))); // NOI18N
        jMenu1.setText("Regresar");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inicio.png"))); // NOI18N
        jMenuItem1.setText("Asignaturas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 920, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Tabla_ReqAsignaturaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_ReqAsignaturaMouseClicked
        if(Tabla_ReqAsignatura.getSelectedRow() >= 0){
            llenarCampos();
        }
    }//GEN-LAST:event_Tabla_ReqAsignaturaMouseClicked

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        String cadena1, cadena2, cadena3;
        cadena1 = txt_idReqAsig.getText();
        cadena2 = txt_NombreReqAsig.getText();
        String id_facultad = cbo_idCarrera.getSelectedItem().toString().substring(0, 4);

        if ((txt_idReqAsig.getText().equals("")) || (txt_NombreReqAsig.getText().equals("")) ||
            (cbo_idCarrera.getSelectedItem().equals("Seleccione la carrera"))) {

            javax.swing.JOptionPane.showMessageDialog(this,"¡Debe llenar todos los campos! \n","¡AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txt_NombreReqAsig.requestFocus();
            return;
        }

        if (existeRequisitoAsignatura()) {
            return;
        }

        if (!validarLongitud(txt_idReqAsig, 4)) {
            JOptionPane.showMessageDialog(null, "El id para la asignatura requisito ingresado es muy pequeño, el mínimo es de 4 caracteres", "Longitud de id la asignatura requisito", JOptionPane.INFORMATION_MESSAGE);
            return;

        }

        if (!validarLongitud(txt_NombreReqAsig,7 )) {
            JOptionPane.showMessageDialog(null, "El  nombre de la asignatura requisito ingresado es muy pequeño, el mínimo es de 7 caracteres", "Longitud de nombre de la asignatura requisito", JOptionPane.INFORMATION_MESSAGE);
            return;

        }

        try {
            PreparedStatement ps;
            ResultSet rs;
            ps = con.prepareStatement("INSERT INTO Requisito_Asignatura (id_asignatura, RequisitoAsignatura,id_carrera)"
                + "                VALUES(?,?,?)");
            ps.setString(1, txt_idReqAsig.getText());
            ps.setString(2, txt_NombreReqAsig.getText());
            ps.setString(3, id_facultad);
            int res = ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha guardado la información de la asignatura requisito");
        } catch (Exception e) {
            System.out.println(e);

        }

        actualizarDatos();
        LimpiarCajas();
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_actualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizar1ActionPerformed

        String nombreAsignaturaRequisito = txt_NombreReqAsig.getText() + " ";
        if ((txt_idReqAsig.getText().equals("")) || (txt_NombreReqAsig.getText().equals("")) ||
            (cbo_idCarrera.getSelectedItem().equals("Seleccione la carrera"))) {

            javax.swing.JOptionPane.showMessageDialog(this,"¡Debe llenar todos los campos! \n","¡AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txt_NombreReqAsig.requestFocus();
            return;
        }
        else if(JOptionPane.showConfirmDialog(null, "¿Está seguro que desea actualizar el registro de la asignatura requisito" + nombreAsignaturaRequisito + "?", "Confirmación de actualización", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
        ) == JOptionPane.YES_OPTION) {
            String id_carrera = cbo_idCarrera.getSelectedItem().toString().substring(0, 3);
            try {
                PreparedStatement ps;
                ResultSet rs;
                ps = con.prepareStatement("Update Requisito_Asignatura set"
                    + " RequisitoAsignatura = ? ,"
                    + " id_asignatura = ? "
                    + " where id_asignatura =\'"+txt_idReqAsig.getText()+"\'");

                ps.setString(1, txt_NombreReqAsig.getText());
                ps.setString(2, txt_idReqAsig.getText());
                /* ps.setString(3, id_facultad);*/
                int res = ps.executeUpdate();
            } catch (Exception e) {
                System.out.println(e);
            }

        }
        actualizarDatos();
        LimpiarCajas();
    }//GEN-LAST:event_btn_actualizar1ActionPerformed

    private void btn_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscarMouseClicked
        rellenar();
        this.jScrollPane1.setEnabled(true);
        this.Tabla_ReqAsignatura.setEnabled(true);
    }//GEN-LAST:event_btn_buscarMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        actualizarDatos();
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        String nombreAsignaturaRequisito = txt_NombreReqAsig.getText();

        if ((txt_idReqAsig.getText().equals("")) || (txt_NombreReqAsig.getText().equals("")) ||
            (cbo_idCarrera.getSelectedItem().equals("Seleccione la carrera"))) {

            javax.swing.JOptionPane.showMessageDialog(this,"¡Debe llenar todos los campos! \n","¡AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txt_NombreReqAsig.requestFocus();
            return;
        }
        else if(JOptionPane.showConfirmDialog(null,"¿Está seguro que desea eliminar el registro de la asignatura requisito "+nombreAsignaturaRequisito+"","Confirmación de eliminación",
            JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE
        )==JOptionPane.YES_OPTION){
            String id_carrera = cbo_idCarrera.getSelectedItem().toString().substring(0, 3);
            try{
                PreparedStatement ps;
                ResultSet rs;
                ps=con.prepareStatement("Delete Requisito_Asignatura "
                    + "where id_asignatura = (Select id_asignatura from Requisito_Asignatura   where RequisitoAsignatura = '"+txt_NombreReqAsig.getText()+"')");
                int res= ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Se ha borrado la información de la asignatura requisito "+nombreAsignaturaRequisito+" correctamente");
                if(res > 0){
                }else {
                    JOptionPane.showMessageDialog(null, "¡Error al eliminar la información!");
                }
            } catch ( Exception e) {
                System.out.println(e);
            }
        }
        actualizarDatos();
        LimpiarCajas();
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
         this.dispose();
        Asignaturas a = null;
         try {
             a = new Asignaturas();
         } catch (SQLException ex) {
             Logger.getLogger(Carrera.class.getName()).log(Level.SEVERE, null, ex);
         }
        a.setVisible(true);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequisitoAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequisitoAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequisitoAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequisitoAsignatura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RequisitoAsignatura().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RequisitoAsignatura.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_ReqAsignatura;
    private javax.swing.JButton btn_actualizar1;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox<String> cbo_idCarrera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_NombreReqAs;
    private javax.swing.JLabel lbl_idCarrera;
    private javax.swing.JLabel lbl_idReqAs;
    private javax.swing.JLabel lbl_titulo;
    private javax.swing.JTextField txt_NombreReqAsig;
    private javax.swing.JTextField txt_idReqAsig;
    // End of variables declaration//GEN-END:variables

    
    private boolean existeRequisitoAsignatura() {
        try {
            Statement st = con.createStatement();
            String sql = "Select id_asignatura from Requisito_Asignatura where RequisitoAsignatura = '" + txt_NombreReqAsig.getText() + "'";
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "El nombre de la asignatura requisito " + txt_NombreReqAsig.getText() + " ya existe", "La asignatura requisito ¡Ya existe!", JOptionPane.INFORMATION_MESSAGE);
                return true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Campus.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private boolean validarLongitud(JTextField texto, int longitud) {
        if (texto.getText().length() >= longitud) {
            return true;
        } else {
            return false;
        }
    }

    private void llenarCampos() {
        int i = Tabla_ReqAsignatura.getSelectedRow();
        txt_idReqAsig.setText(Tabla_ReqAsignatura.getValueAt(i, 0).toString());
        txt_NombreReqAsig.setText(Tabla_ReqAsignatura.getValueAt(i, 1).toString());
        cbo_idCarrera.setSelectedItem(Tabla_ReqAsignatura.getValueAt(i, 2).toString());

    }
  

private void rellenar() {
                try {
                    String cap = "";
                    ResultSet rs2 = null;
                   var = JOptionPane.showInputDialog(this, "Ingrese el nombre de la asignatura requisito que desea consultar", "Consulta de la asignatura requisito", JOptionPane.QUESTION_MESSAGE);
                    if (var == null) {
                        JOptionPane.showMessageDialog(this, "La acción fue cancelada", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        if (var.equals("")) {
                            JOptionPane.showMessageDialog(this, "Favor de ingresar el nombre de la asignatura requisito \n que desea consultar", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            String sql = "SELECT * FROM Requisito_Asignatura where id_asignatura='"+var+"' or RequisitoAsignatura ='"+var+"'";
                            stmt = con.createStatement();
                            rs2 = stmt.executeQuery(sql);

                            if (rs2.next()) {
                                txt_idReqAsig.setText(rs2.getString("id_asignatura"));
                                txt_NombreReqAsig.setText(rs2.getString("RequisitoAsignatura"));
                            } else {
                                JOptionPane.showMessageDialog(null, "¡No se encuentra los datos: "+var+" ! Por favor verifique sí, lo escribio correctamente");
                            }
                        }

                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
    }

      public void actualizarDatos() {
        try {
            String sql = "SELECT * FROM Requisito_Asignatura";
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            modelo = new DefaultTableModel(null, titulos);
            Tabla_ReqAsignatura.setModel(modelo);
            while (rs.next()) {
                String[] datos = new String[3];
                datos[0] = rs.getString("id_asignatura");
                datos[1] = rs.getString("RequisitoAsignatura");
                datos[2] =rs.getString("id_carrera");
                modelo.addRow(datos);
            }
            TableColumn ida = Tabla_ReqAsignatura.getColumn(titulos[0]);
            ida.setMaxWidth(300);
            ida.setIdentifier(ICONIFIED);
            TableColumn nRA = Tabla_ReqAsignatura.getColumn(titulos[1]);
            nRA.setMaxWidth(300);
            TableColumn cidc = Tabla_ReqAsignatura.getColumn(titulos[2]);
                cidc.setMaxWidth(150);
        } catch (Exception e) {
           /* JOptionPane.showMessageDialog(null, e.getMessage());*/
            System.err.println(e);
        }
    }

  private void LimpiarCajas(){
        txt_NombreReqAsig.setText(null);
        txt_idReqAsig.setText(null);
           cbo_idCarrera.setSelectedIndex(0);
        
        
        
    }



}
