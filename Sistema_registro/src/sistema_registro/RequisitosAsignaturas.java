/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema_registro;

import codigo.Conexion_consulta;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sistema_registro.SQL.ConectorSQL;

/**
 *
 * @author William P.
 */
public class RequisitosAsignaturas extends javax.swing.JFrame {

Connection con = null;
    String titulos [] = {"Id Requisitos", "Nombre Requisitos","Id Carrera", };
   
    DefaultTableModel modelo =  new DefaultTableModel();
    Statement stmt = null;
    String var, var2;
    
    public RequisitosAsignaturas() throws SQLException {
        this.con = ConectorSQL.obtenerConexion ();
        initComponents();
        ArrayList<String> lista = new ArrayList<String>();
             lista = new Conexion_consulta().llenar_combo2();
            for(int i = 0; i<lista.size();i++){
                cbo_IdCarrera.addItem(lista.get(i));
            }
             this.setLocationRelativeTo(null);
            this.setTitle("Requisitos");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbl_IdCarrera = new javax.swing.JLabel();
        cbo_IdCarrera = new javax.swing.JComboBox<>();
        lbl_idReqA = new javax.swing.JLabel();
        txt_idReqA = new javax.swing.JTextField();
        lbl_NomReqA = new javax.swing.JLabel();
        txt_NomReqA = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_RequisitosAsignaturas = new javax.swing.JTable();
        btn_guardar = new javax.swing.JButton();
        btn_actualizar = new javax.swing.JButton();
        btn_eliminar1 = new javax.swing.JButton();
        btn_buscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText(" Requisitos Asignaturas");

        lbl_IdCarrera.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_IdCarrera.setText("Carrera");

        cbo_IdCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una carrera" }));

        lbl_idReqA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_idReqA.setText("Id Requisitos:");

        txt_idReqA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_idReqA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idReqAActionPerformed(evt);
            }
        });

        lbl_NomReqA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbl_NomReqA.setText("Nombre Requisitos:");

        txt_NomReqA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_NomReqA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_NomReqAActionPerformed(evt);
            }
        });

        Tabla_RequisitosAsignaturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Requisitos", "Nombre Requisitos", "Id Carrera"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_RequisitosAsignaturas.setToolTipText("Presiona consulta para ver todas las asignaturas\n");
        Tabla_RequisitosAsignaturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_RequisitosAsignaturasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_RequisitosAsignaturas);

        btn_guardar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Guardar.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_actualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Actualizar.png"))); // NOI18N
        btn_actualizar.setText("Actualizar");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_eliminar1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_eliminar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Eliminar.png"))); // NOI18N
        btn_eliminar1.setText("Eliminar");
        btn_eliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminar1ActionPerformed(evt);
            }
        });

        btn_buscar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/botton_Consulta.png"))); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_buscarMouseClicked(evt);
            }
        });
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(218, 218, 218)
                        .addComponent(lbl_idReqA)
                        .addGap(56, 56, 56)
                        .addComponent(txt_idReqA, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_NomReqA)
                                .addGap(38, 38, 38))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_actualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(242, 242, 242)
                                .addComponent(lbl_IdCarrera)
                                .addGap(85, 85, 85)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbo_IdCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_NomReqA, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_eliminar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(598, 598, 598)))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_idReqA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_idReqA)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(btn_guardar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_NomReqA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_NomReqA))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbo_IdCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_IdCarrera)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btn_actualizar)))
                .addGap(6, 6, 6)
                .addComponent(btn_eliminar1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(btn_buscar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idReqAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idReqAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idReqAActionPerformed

    private void txt_NomReqAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_NomReqAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_NomReqAActionPerformed

    private void Tabla_RequisitosAsignaturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_RequisitosAsignaturasMouseClicked
        if(Tabla_RequisitosAsignaturas.getSelectedRow () >= 0){
            llenarCampos();
        }
    }//GEN-LAST:event_Tabla_RequisitosAsignaturasMouseClicked

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed

        String cadena1, cadena2, cadena3;
        cadena1 = txt_idReqA.getText();
        cadena2 = txt_NomReqA.getText();
         String id_carrera = cbo_IdCarrera.getSelectedItem().toString().substring(0, 3);
        

        if ((txt_idReqA.getText().equals("")) || (txt_NomReqA.getText().equals(""))  
            ||  (cbo_IdCarrera.getSelectedItem().equals("Seleccione un carrera"))) {

            javax.swing.JOptionPane.showMessageDialog(this,"¡Debe llenar todos los campos! \n","¡AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
            txt_idReqA.requestFocus();
            return;
        }

        if(existeRequisitoAsignatura()){
            return;
        }

        if(!validarLongitud(txt_idReqA,3)){
            JOptionPane.showMessageDialog(null, "El codigo de asignaturas tiene que ser minimo de 3 caracteres", "Longitud de id de asignatura requisito", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        if(!validarLongitud(txt_NomReqA,7)){
            JOptionPane.showMessageDialog(null, "El Nombre de la asignatura es muy corto el mínimo es de 7 caracteres", "Longitud del nombre de asignatura requisito", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        
        try{
            PreparedStatement ps;
            ResultSet rs;

            ps=con.prepareStatement("Insert into [Requisitos_Asignaturas] (id_requisitos, [Nombre Requisito], id_carrera)"
                + "                VALUES(?,?,?,?)");
            ps.setString(1, txt_idReqA.getText());
            ps.setString(2, txt_NomReqA.getText());
            ps.setString(3, id_carrera);
            
            int res= ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Se ha guardado la información en asignatura requisito");
        } catch ( Exception e) {
            System.out.println(e);

            JOptionPane.showMessageDialog(null, e.getMessage());
        }

        ConsultarDatos();
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
        String Asignaturas = txt_idReqA.getText() + " " + txt_NomReqA.getText();

        if(JOptionPane.showConfirmDialog(null,"¿Está seguro que desea actualizar el requisito asignatura "+txt_NomReqA+"?","Confirmación de actualización",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE
        )==JOptionPane.YES_OPTION){

            String id_carrera = cbo_IdCarrera.getSelectedItem().toString().substring(0, 3);
            

            try{
                PreparedStatement ps;
                ResultSet rs;
                ps=con.prepareStatement("Update [Requisitos_Asignaturas] "
                    + "set id_requisitos = ?,"
                    + "[Nombre Requisitos] = ? ,"
                    + "id_carrera = ? "
                    
                    + " where id_requisitos =\'"+txt_idReqA.getText()+"\'"
                    + "or [Nombre Requisitos] = '"+var+"' ");

                ps.setString(1, txt_idReqA.getText());
                ps.setString(2, txt_NomReqA.getText());
              

                int res= ps.executeUpdate();
            } catch ( Exception e) {
                System.out.println(e);
            } /*try{
                Statement st2=con.createStatement();

                String sql ="Update Asignaturas "
                + "set cod_asignaturas = '"+txt_codA.getText()+"'"
                + "set nombre_asignaturas = '"+txt_NombreA.getText()+"'"
                + "set UV = '"+txt_UniVal.getText()+"'"
                + "where cod_asignaturas = (Select cod_asignaturas from Asignaturas where nombre_asignaturas = '"+txt_NombreA.getText()+"')";
                int rs2 = st2.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Se ha actualizado la información del registro de asignatura "+txt_NombreA+" correctamente.");
            }catch ( Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }*/
        }
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_eliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminar1ActionPerformed
        String RequisitosAsignaturas = txt_idReqA.getText() + " " + txt_NomReqA.getText();
        if (JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar el registro de asignatura " + RequisitosAsignaturas + "", "Confirmación de eliminación",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
        ) == JOptionPane.YES_OPTION) {

            try {
                Statement st2 = con.createStatement();
                String sql = "Delete [Requisitos_Asignaturas] "
                + "where id_requisitos = (Select id_requisitos from [Requisitos_Asignaturas] where [Nombre Requisito] = '"+txt_NomReqA.getText()+"')";

                int rs2 = st2.executeUpdate(sql);
                System.out.println(rs2);
                if(rs2 > 0){
                    JOptionPane.showMessageDialog(null, "Se ha borrado la información de asignatura requisito " + RequisitosAsignaturas + " correctamente");

                }else {
                    JOptionPane.showMessageDialog(null, "¡Error al eliminar la información!");

                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

        }
    }//GEN-LAST:event_btn_eliminar1ActionPerformed

    private void btn_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscarMouseClicked
        rellenar();
        this.jScrollPane1.setEnabled(true);
        this.Tabla_RequisitosAsignaturas.setEnabled(true);
    }//GEN-LAST:event_btn_buscarMouseClicked

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        ConsultarDatos();
    }//GEN-LAST:event_btn_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequisitosAsignaturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequisitosAsignaturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequisitosAsignaturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequisitosAsignaturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RequisitosAsignaturas().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(RequisitosAsignaturas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla_RequisitosAsignaturas;
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_eliminar1;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox<String> cbo_IdCarrera;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_IdCarrera;
    private javax.swing.JLabel lbl_NomReqA;
    private javax.swing.JLabel lbl_idReqA;
    private javax.swing.JTextField txt_NomReqA;
    private javax.swing.JTextField txt_idReqA;
    // End of variables declaration//GEN-END:variables

public boolean existeRequisitoAsignatura(){
        try {
            Statement st = con.createStatement();
            String sql = "Select id_requisitos from [Requisitos_Asignaturas]  where id_requisitos = '"+txt_idReqA.getText()+"'";
            ResultSet rs = st.executeQuery(sql);
            if(rs.next()){
                JOptionPane.showMessageDialog(null, "Ya existe este Requisito de Asignatura: "+txt_idReqA.getText()+" ", "Id de de Asignatura Requisito  ¡Ya existe!", JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
            else{
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(RequisitosAsignaturas.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

 private boolean validarLongitud(JTextField texto, int longitud){
       if(texto.getText().length() >= longitud){
           return true;
       }
       else{
           return false;
       }
    }
 
  public void ConsultarDatos(){
        try {
               
               String sql = "SELECT * FROM [Requisitos_Asignaturas] where id_requisitos=\'"+txt_idReqA.getText()+"\'";
               stmt = con.createStatement();
               ResultSet rs = stmt.executeQuery(sql);
               
               modelo = new DefaultTableModel(null, titulos);
               Tabla_RequisitosAsignaturas.setModel(modelo);
                 while(rs.next()) {
                     
                          String []datos= new String[3];
                      datos[0] =rs.getString("id_requisitos");
                      datos[1] =rs.getString("[Nombre_Requisito]");
                     datos[2] =rs.getString("id_carrera");
                      
                      
                     modelo.addRow(datos);
                      
                      centrar_datos();
                 }
            TableColumn idreqa = Tabla_RequisitosAsignaturas.getColumn(titulos[0]);
            idreqa.setMaxWidth(125);
            TableColumn nomreqa= Tabla_RequisitosAsignaturas.getColumn(titulos[1]);
            nomreqa.setMaxWidth(165);
           TableColumn idcc= Tabla_RequisitosAsignaturas.getColumn(titulos[2]);
           idcc.setMaxWidth(165);
           
        }
        catch (Exception e) {
           
            System.err.println(e);
        }
           }
  
  public void centrar_datos() {
 
        DefaultTableCellRenderer modelocentrar = new DefaultTableCellRenderer();
        modelocentrar.setHorizontalAlignment(SwingConstants.CENTER);
         for (int i = 0; i <modelo.getRowCount(); i++) {
              Tabla_RequisitosAsignaturas.getColumnModel().getColumn(i).setCellRenderer(modelocentrar);
             
         }
     
    }
  
  private void llenarCampos(){
        int i = Tabla_RequisitosAsignaturas.getSelectedRow();
        txt_idReqA.setText(Tabla_RequisitosAsignaturas.getValueAt(i, 0).toString());
        txt_NomReqA.setText(Tabla_RequisitosAsignaturas.getValueAt(i, 1).toString());
        cbo_IdCarrera.setSelectedItem(Tabla_RequisitosAsignaturas.getValueAt(i, 2).toString());
                               
    }
  
    private void rellenar() {
        System.out.println(lbl_idReqA.getText());
        try {
            System.out.println(lbl_NomReqA.getText());
            Statement st = con.createStatement();
            String consulta = "Select * from [Requisitos_Asignaturas] where id_requisitos = '" + lbl_idReqA.getText() + "'";
            ResultSet rs = st.executeQuery(consulta);
            System.out.println(rs.next());

            if (rs.next()) {
                try {
                    String cap = "";
                    ResultSet rs2 = null;
                   var = JOptionPane.showInputDialog(this, "Ingrese el nombre del datos de asignatura requsito que desea consultar", "Consulta de datos de asignatura requsito", JOptionPane.QUESTION_MESSAGE);
                    if (var == null) {
                        JOptionPane.showMessageDialog(this, "La acción fue cancelada", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        if (var.equals("")) {
                            JOptionPane.showMessageDialog(this, "Favor de ingresar losdatos de asignatura requsito \n que desea consultar", "¡AVISO!", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            String sql = "SELECT * FROM [Requisitos_Asignaturas] where [Nombre Requisito] =\'"+txt_NomReqA.getText()+"\' ";
                            stmt = con.createStatement();
                            rs2 = stmt.executeQuery(sql);

                            if (rs2.next()) {
                            
                                 txt_idReqA.setText(rs2.getString("id_requisitos"));
                                txt_NomReqA.setText(rs2.getString("[Nombre Requisito]"));

                            } else {
                                JOptionPane.showMessageDialog(null, "¡No se encuentra los datos de asignatura requsito  ! Por favor verifique sí, lo escribio correctamente");
                            }

                        }

                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
               /* JOptionPane.showMessageDialog(null, "¡Sólo los administradores tienen acceso a esta función!");*/
            }

        } catch (SQLException ex) {
            Logger.getLogger(Campus.class.getName()).log(Level.SEVERE, null, ex);
        }
 
}
    
    
    private void LimpiarCajas(){
        
        txt_idReqA.setText(null);
        txt_NomReqA.setText(null);              
        cbo_IdCarrera.setSelectedIndex(0);
       
    }
    
}